(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{365:function(e,t,a){"use strict";a.r(t);var s=a(42),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#architecture-overview"}},[e._v("Architecture Overview")])]),a("li",[a("a",{attrs:{href:"#requirements"}},[e._v("Requirements")])]),a("li",[a("a",{attrs:{href:"#installation-using-docker"}},[e._v("Installation using Docker")]),a("ul",[a("li",[a("a",{attrs:{href:"#setting-up-a-reverse-proxy"}},[e._v("Setting up a Reverse-Proxy")])])])])])]),a("p"),e._v(" "),a("h2",{attrs:{id:"architecture-overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#architecture-overview"}},[e._v("#")]),e._v(" Architecture Overview")]),e._v(" "),a("h2",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("h2",{attrs:{id:"installation-using-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation-using-docker"}},[e._v("#")]),e._v(" Installation using Docker")]),e._v(" "),a("p",[e._v("To setup the Chemotion ELN using Docker, Docker and Docker-compose have to be installed on the host machine. Please refer to your distributions documentation on how this can be achieved. For Ubuntu-based machines, this can be found "),a("a",{attrs:{href:"https://docs.docker.com/engine/install/ubuntu/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("In addition you need that latest version of our Docker build files. They can be found here:")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"data/Dockerfile"}},[e._v("Dockerfile")])]),e._v(" "),a("li",[a("a",{attrs:{href:"data/docker-compose.yml"}},[e._v("docker-compose.yml")])])]),e._v(" "),a("p",[e._v("Download those files and place them in a separate folder (further referred to as "),a("code",[e._v("CES_DOCKER_PATH")]),e._v(" as it should contain all the files to build and run the container).")]),e._v(" "),a("p",[e._v("In a next step checkout the Chemotion ELN main repository and change to the latest branch:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("git clone https://git.scc.kit.edu/ComPlat/chemotion_eln_server.git\ncd chemotion_eln_server\ngit checkout development\n")])])]),a("p",[e._v("In this documentation we refer to the folder containing the source files as "),a("code",[e._v("CES_HOST_PATH")]),e._v(". These paths are used by the Docker files and thus they need to exported to the shell as environment variables:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("export CES_HOST_PATH=/{change this}/chemotion_eln_server\nexport CES_DOCKER_PATH=/{change this}/chemotion-docker\n")])])]),a("p",[e._v("Now, we can start the build process for the container:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('cd $CES_DOCKER_PATH\necho "CES_HOST_PATH=${CES_HOST_PATH}\\nCES_DOCKER_PATH=${CES_DOCKER_PATH}" > .env\n\ndocker-compose build --no-cache\n')])])]),a("p",[e._v("After the container has been built, the ELN service has to be configured using it's configuration files. The configuration files are all present in "),a("code",[e._v("CES_HOST_PATH")]),e._v(" with a "),a("code",[e._v(".example")]),e._v(" extension. Please make sure to edit them according to your needs and save them without the "),a("code",[e._v(".example")]),e._v(" extension. Most configuration files should be self-explanatory but further explanation can be found on the "),a("a",{attrs:{href:"https://git.scc.kit.edu/ComPlat/chemotion_ELN/-/blob/development/INSTALL.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("Chemotion ELN repository"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("If you just want to use the example configuration, you can copy the example files:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cp ${CES_HOST_PATH}/config/datacollectors.yml.example ${CES_HOST_PATH}/config/datacollectors.yml\ncp ${CES_HOST_PATH}/config/storage.yml.example ${CES_HOST_PATH}/config/storage.yml\n")])])]),a("p",[e._v("With the application being configured, "),a("code",[e._v("docker-compose")]),e._v(" can be used to initialize the database:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker-compose run app bundle exec rake db:create\ndocker-compose run app bundle exec rake db:migrate\ndocker-compose run app bundle exec rake db:seed\n")])])]),a("p",[e._v("Here, the last line is optional but highly recommended, since it does create a demo user "),a("code",[e._v("template.moderator@eln.edu")]),e._v(" with the password "),a("code",[e._v("@eln.edu")]),e._v(".")]),e._v(" "),a("p",[e._v("The next step is to install dependencies that are needed by the application and are not present in the container:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker-compose run app /bin/bash -c '/usr/local/nvm/versions/node/v12.18.3/bin/npm i'\n\ndocker-compose run app /bin/bash -c 'source /usr/local/nvm/nvm.sh;\\\n cd node_modules/@novnc/noVNC;\\\n npx babel-upgrade --write; npm i; npm i pako; npm i @babel/preset-env;\\\n mkdir -p utils;\\\n curl https://raw.githubusercontent.com/novnc/noVNC/master/utils/use_require.js > utils/use_require.js;\\\n node utils/use_require.js --clean; true'\n")])])]),a("p",[e._v("After this, the next commands precreate static assets. This is also a good test to make sure everything went as expected:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker-compose run app rake ketcherails:import:common_templates\ndocker-compose run app bundle exec rake assets:precompile\n")])])]),a("p",[e._v("With the last command exiting with error code 0, the service should be setup correctly and is ready to be used. This can be done by starting the services with "),a("code",[e._v("docker-compose")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cd ${CES_DOCKER_PATH}\ndocker-compose up -d\n")])])]),a("p",[e._v("The services are now up and running and will be available on "),a("a",{attrs:{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"}},[e._v("localhost:3000"),a("OutboundLink")],1),e._v(".\nTo simplify this installation process, the steps are all gathered in a single shell script that can be found "),a("a",{attrs:{href:"https://ptrxyz.github.io/chemotion-docs/data/install.sh",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(". Feel free to use this, yet this does not consider any user specific configuration and is thus not meant to be used in a production environment. Further, the script does not check if any files in the target folders "),a("code",[e._v("$(pwd)/chemotion_eln_server")]),e._v(" and "),a("code",[e._v("$(pwd)/chemotion-docker")]),e._v(" exist. Files might be overwritten, so handle with care!")]),e._v(" "),a("h3",{attrs:{id:"setting-up-a-reverse-proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-a-reverse-proxy"}},[e._v("#")]),e._v(" Setting up a Reverse-Proxy")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Todo: NGinx as Revers-Proxy goes here. Mb LE certificates for SSL?\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);